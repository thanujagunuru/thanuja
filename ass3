class Solution {
public:
    vector<vector<int> > permute(vector<int> &num) {
       
    	vector<vector<int> > permutations(1, vector<int>());
    	
    	for (vector<int>::size_type index = 0; index != num.size(); ++index)
    	{
    		vector<vector<int> > subPermutations(permutations);
    		permutations.clear();
    		for (vector<vector<int> >::size_type i = 0; i != subPermutations.size(); ++i)
    		{
    			for (int offset = 0; offset != subPermutations[i].size()+1; ++offset)
    			{
    				vector<int> temp(subPermutations[i]);
    				temp.insert(temp.begin() + offset, num[index]);
    				permutations.push_back(temp);
    			}
    		}
    	}
    	return permutations;
    }
};

